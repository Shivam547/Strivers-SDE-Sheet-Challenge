APPROACH 1->
bool searchMatrix(vector<vector<int>>& mat, int target) {
        for(int i=0;i<mat.size();i++){
            int s=0;
            int e=mat[0].size()-1;
            while(s<=e){
                int mid=s+(e-s)/2;
                if(mat[i][mid]==target){
                    return true;
                }
                else if(mat[i][mid]<target){
                    s=mid+1;
                }
                else{
                    e=mid-1;
                }
            }
        }
        return false;
}
APPROACH-2-> Partial Test Case
bool searchMatrix(vector<vector<int>>& mat, int target) {
    vector<int>v;
    for(int i=0;i<mat.size();i++){
        for(int j=0;j<mat[0].size();j++){
            v.push_back(mat[i][j]);
        }
    }
    sort(v.begin(), v.end());
    int s=0;
    int e=v.size()-1;
    while(s<=e){
        int mid=s+(e-s)/2;
        if(v[mid]==target){
            return true;
        }
        else if(v[mid]<target){
            s=mid+1;
        }
        else{
            e=mid-1;
        }
    }
    return false;    
}
