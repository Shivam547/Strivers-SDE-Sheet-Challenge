vector<int> zigZagTraversal(BinaryTreeNode<int> *root)
{
    vector<int>result;
    if(root==NULL){
        return result;
    }
    queue<BinaryTreeNode<int>*>q;
    q.push(root);
    bool lefttoright=true;
    while(!q.empty()){
        int size=q.size();
        vector<int>arr(size);
        for(int i=0;i<size;i++){
            BinaryTreeNode<int>* temp=q.front();
            q.pop();

            int index=lefttoright ? i : size-i-1;
            arr[index]=temp->data;

            if(temp->left!=NULL){
                q.push(temp->left);
            }
            if(temp->right!=NULL){
                q.push(temp->right);
            }
        }
        lefttoright=!lefttoright;
        for(i:arr){
            result.push_back(i);
        }
    }
    return result;
}
