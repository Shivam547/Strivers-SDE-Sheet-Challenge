vector<int> KMostFrequent(int n, int k, vector<int> &arr)
{
    unordered_map<int,int>m;
    for(int i=0;i<n;i++){
        m[arr[i]]++;
    }
    priority_queue<pair<int,int>>pq;
    for(auto it:m){
        pq.push({it.second, it.first});
    }
    vector<int>ans;
    int cnt=0;
    while(!pq.empty()){
        if(cnt<k){
            ans.push_back(pq.top().second);
            pq.pop();
            cnt++;
        }
        else{
            break;
        }
    }
    return ans;
}
