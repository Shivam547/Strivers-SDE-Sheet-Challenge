Node* reversekgroups(Node* head, int n, int b[], int i){
	if(head==NULL || head->next==NULL){
		return head;
	}
	Node* prev=NULL;
	Node* curr=head;
	Node* forward=NULL;
	int cnt=0;
	while(b[i]==0 && i<n){
		i++;
	}
	if(i>=n && curr!=NULL){
		return head;
	}
	while(curr!=NULL && cnt<b[i] && i<n){
		forward=curr->next;
		curr->next=prev;
		prev=curr;
		curr=forward;
		cnt++;
	}
	if(forward!=NULL){
		head->next=reversekgroups(forward, n, b, i+1);
	}
	return prev;
}
Node *getListAfterReverseOperation(Node *head, int n, int b[]){
	return reversekgroups(head, n, b, 0);
}
