void dfs(vector<vector<int>>& image, vector<vector<int>>& ans, int row, int col, int initialcol, int newColor){
    ans[row][col]=newColor;
    int n=image.size();
    int m=image[0].size();
    int delrow[]={-1, 0, +1, 0};
    int delcol[]={0, +1, 0, -1};
    for(int i=0;i<4;i++){
        int nrow=row+delrow[i];
        int ncol=col+delcol[i];
        if(nrow>=0 && nrow<n && ncol>=0 && ncol<m &&
         ans[nrow][ncol]!=newColor && image[nrow][ncol]==initialcol){
            dfs(image, ans, nrow, ncol, initialcol, newColor);
        }
    }
}

vector<vector<int>> floodFill(vector<vector<int>> &image, int x, int y, int newColor)
{
    int initialcol=image[x][y];
    vector<vector<int>>ans=image;
    dfs(image, ans, x, y, initialcol, newColor);
    return ans;
}
