#include <bits/stdc++.h> 
vector<pair<pair<int, int>, int>> calculatePrimsMST(int n, int m, vector<pair<pair<int, int>, int>> &g)
{
    vector<pair<pair<int,int>,int>>ans;
    vector<pair<int,int>>adj[n+1];
    for(int i=0;i<g.size();i++){
        int u=g[i].first.first;
        int v=g[i].first.second;
        int w=g[i].second;
        adj[u].push_back({v,w});
        adj[v].push_back({u,w});
    }
    priority_queue<pair<int,pair<int,int>>, vector<pair<int,pair<int,int>>>,
     greater<pair<int,pair<int,int>>>>pq;
    pq.push({0,{1,-1}});
    vector<int>vis(n+1,0);
    while(!pq.empty()){
        auto it=pq.top();
        int wt=it.first;
        int node=it.second.first;
        int parent=it.second.second;
        pq.pop();

        if(vis[node]) continue;

        vis[node]=1;
        if(parent!=-1){
            ans.push_back({{node, parent}, wt});
        }
        for(auto it:adj[node]){
            int adjnode=it.first;
            int adwt=it.second;
            if(vis[adjnode]==0){
                pq.push({adwt,{adjnode,node}});
            }
        }
    }
    return ans;
}
