//TC->O(N) && SC->O(1)
TreeNode<int>* solve(vector<int>& preorder, int low, int high){
    if(low>high){
        return NULL;
    }
    int mid=(low+high)/2;
    TreeNode<int>* root=new TreeNode<int>(preorder[mid]);
    
    root->left=solve(preorder, low, mid-1);
    root->right=solve(preorder, mid+1, high);
    return root;
}
TreeNode<int>* preOrderTree(vector<int> &preOrder){
    sort(preOrder.begin(), preOrder.end());
    int low=0;
    int high=preOrder.size()-1;
    return solve(preOrder, low, high);
}
